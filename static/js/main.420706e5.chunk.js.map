{"version":3,"sources":["components/cards/Cloud.tsx","components/cards/Date.tsx","components/cards/Humidity.tsx","components/cards/Pressure.tsx","components/cards/Sun.tsx","utils/temperatureConverter.ts","components/cards/Temperature.tsx","components/cards/Visibility.tsx","components/cards/Weather.tsx","components/cards/Wind.tsx","components/ItemPaper.tsx","components/Footer.tsx","components/Head.tsx","components/Card.tsx","components/Main.tsx","components/more/Add.tsx","components/more/settings/cards/Theme.tsx","components/more/settings/cards/Unit.tsx","components/more/settings/Index.tsx","components/more/Index.tsx","components/Title.tsx","components/ToggleCookies.tsx","App.tsx","utils/getCardList.ts","index.js"],"names":["CloudCard","loading","weather","Typography","variant","Skeleton","clouds","all","DateCard","currentDate","toDateString","toLocaleTimeString","HumidityCard","main","humidity","PressureCard","unitType","pressure","toFixed","SunCard","getTime","sys","sunrise","sunset","time","Date","temperatureConverter","temperature","fromUnit","toUnit","_temperature","Math","round","covertToFarhenheit","convertToCelsius","convertToKelvin","TemperatureCard","temperatureUnit","temp","feels_like","temp_min","temp_max","VisibilityCard","getVisibility","visibility","WeatherCard","width","height","style","margin","src","icon","alt","description","name","WindCard","wind","speed","ItemPaper","styled","Paper","padding","textAlign","backgroundColor","theme","palette","primary","opacity","Footer","Button","color","onClick","window","open","Head","Helmet","rel","href","Card","children","cards","index","setCards","handleDelete","filter","_","_index","draggableId","provided","ref","innerRef","draggableProps","dragHandleProps","sx","position","IconButton","top","right","Delete","Main","cardsLeft","cardsList","cardsRight","setCardsLeft","setCardsRight","cookies","Cookies","onDragEnd","source","destination","droppableId","splice","set","join","path","card","Grid","container","Column","dropId","item","xs","Stack","map","find","component","placeholder","cardNames","Add","setOpen","handleClose","Dialog","onClose","fullWidth","PaperProps","bgcolor","DialogTitle","DialogContent","List","cardName","includes","length","ListItem","ListItemIcon","ListItemText","toUpperCase","slice","DialogActions","Theme","themeType","setThemeType","ToggleButtonGroup","value","exclusive","onChange","console","log","ToggleButton","Unit","setUnitType","Settings","columns","sm","More","cardLeft","cardRight","useState","addOpen","setAddOpen","settingsOpen","setSettingsOpen","actions","handleOpen","SpeedDial","ariaLabel","bottom","MoreVert","SpeedDialAction","tooltipTitle","Title","country","ToggleCookies","aboutOpen","setAboutOpen","display","setDisplay","Alert","severity","action","Actions","AlertTitle","About","spacing","Help","APIKEY","api_key","darkTheme","createTheme","background","default","text","lightTheme","App","setCurrentDate","error","setError","setLoading","coord","lon","lat","id","base","deg","dt","type","timezone","cod","setWeather","getCardList","useEffect","navigator","geolocation","themeTypes","get","split","getCookies","getPositionWeather","then","_weather","countryCode","weatherInterval","setInterval","dateInterval","clearInterval","ThemeProvider","timeTheme","CssBaseline","Boolean","a","getPosition","latitude","longitude","APIURL","toString","fetch","response","ok","json","Promise","resolve","getCurrentPosition","coords","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.420706e5.chunk.js","sourcesContent":["/*\n * Imports\n*/\n\n/* Dependencies */\n// Components\nimport { Skeleton, Typography } from '@mui/material'\n\n/* Locals */\n// Types\nimport Weather from '../../utils/types/Weather'\n\n/*\n * Code\n*/\n\ntype Props = {\n  loading: boolean,\n  weather: Weather,\n}\n\nexport default function CloudCard({ loading, weather }: Props): JSX.Element {\n  return (\n    <>\n      <Typography variant=\"h5\">Cloud</Typography>\n      \n      <Typography>{loading ? <Skeleton /> : `${weather.clouds.all}%`}</Typography>\n    </>\n  )\n}\n","/*\n * Imports\n*/\n\n/* Dependencies */\n// Components\nimport { Typography } from '@mui/material'\n\n/*\n * Code\n*/\n\ntype Props = {\n  currentDate: Date\n}\n\nexport default function DateCard({ currentDate }: Props): JSX.Element {\n  return (\n    <>\n      <Typography variant=\"h5\">Date</Typography>\n\n      <Typography variant=\"h6\">{currentDate.toDateString()}</Typography>\n      \n      <Typography variant=\"h6\">{currentDate.toLocaleTimeString()}</Typography>\n    </>\n  )\n}\n","/*\n * Imports\n*/\n\n/* Dependencies */\n// Components\nimport { Skeleton, Typography } from '@mui/material'\n\n/* Locals */\n// Types\nimport Weather from '../../utils/types/Weather'\n\n/*\n * Code\n*/\n\ntype Props = {\n  loading: boolean,\n  weather: Weather,\n}\n\nexport default function HumidityCard({ loading, weather }: Props): JSX.Element {\n  return (\n    <>\n      <Typography variant=\"h5\">Humidity</Typography>\n\n      <Typography>{loading ? <Skeleton /> : `${weather.main.humidity}%`}</Typography>\n    </>\n  )\n}\n","/*\n * Imports\n*/\n\n/* Dependencies */\n// Components\nimport { Skeleton, Typography } from '@mui/material'\n\n/* Locals */\n// Types\nimport Units from '../../utils/types/Units'\nimport Weather from '../../utils/types/Weather'\n\n/*\n * Code\n*/\n\ntype Props = {\n  loading: boolean,\n  unitType: Units,\n  weather: Weather\n}\n\nexport default function PressureCard({ loading, unitType, weather }: Props): JSX.Element {\n  return (\n    <>\n      <Typography variant=\"h6\">Pressure</Typography>\n      \n      <Typography variant=\"body1\">\n        {loading ? <Skeleton /> : unitType === 'metric' ? `${weather.main.pressure} hPa` : `${(weather.main.pressure * 0.750061683).toFixed(1)} inHg`}\n      </Typography>\n    </>\n  )\n}\n","/*\n * Imports\n*/\n\n/* Dependencies */\n// Components\nimport { Skeleton, Typography } from '@mui/material'\n\n/* Locals */\n// Types\nimport Weather from '../../utils/types/Weather'\n\n/*\n * Code\n*/\n\ntype Props = {\n  loading: boolean,\n  weather: Weather\n}\n\nexport default function SunCard({ loading, weather }: Props): JSX.Element {\n  return (\n    <>\n      <Typography variant=\"h5\">Sun</Typography>\n\n      <Typography variant=\"h6\">Sunrise</Typography>\n      <Typography variant=\"body1\">{loading ? <Skeleton /> : getTime(weather.sys.sunrise)}</Typography>\n\n      <Typography variant=\"h6\">Sunset</Typography>\n      <Typography variant=\"body1\">{loading ? <Skeleton /> : getTime(weather.sys.sunset)}</Typography>\n    </>\n  )\n}\n\nfunction getTime(time: number): string {\n  const date = new Date(time * 1000)\n\n  return date.toLocaleTimeString()\n}\n","/*\n * Imports\n*/\n\n/* Dependencies */\n// Types\nimport TemperatureUnits from './types/TemperatureUnits'\n\n/*\n * Code\n*/\n\nexport default function temperatureConverter(temperature: number, fromUnit: TemperatureUnits, toUnit: TemperatureUnits): number {\n  if (fromUnit === toUnit) return temperature\n\n  if(toUnit === 'F') return covertToFarhenheit(temperature, fromUnit)\n\n  if(toUnit === 'C') return convertToCelsius(temperature, fromUnit)\n\n  if(toUnit === 'K') return convertToKelvin(temperature, fromUnit)\n\n  return 0\n}\n\nfunction covertToFarhenheit(_temperature: number, fromUnit: TemperatureUnits): number {\n  let temperature = 0\n  \n  if(fromUnit === 'C') temperature = (_temperature * 9 / 5) + 32\n  \n  if(fromUnit === 'K') temperature = (_temperature - 273.15) * 9 / 5 + 32\n\n  return Math.round(temperature * 100) / 100\n}\n\nfunction convertToCelsius(_temperature: number, fromUnit: TemperatureUnits): number {\n  let temperature = 0\n\n  if(fromUnit === 'F') temperature = (_temperature - 32) * 5 / 9\n\n  if(fromUnit === 'K') temperature = _temperature - 273.15\n\n  return Math.round(temperature * 100) / 100\n}\n\nfunction convertToKelvin(_temperature: number, fromUnit: TemperatureUnits): number {\n  let temperature = 0\n\n  if(fromUnit === 'F') temperature = (_temperature - 32) * 5 / 9 + 273.15\n\n  if(fromUnit === 'C') temperature = _temperature + 273.15\n\n  return Math.round(temperature * 100) / 100\n}\n","/*\n * Imports\n*/\n\n/* Dependencies */\n// Components\nimport { Skeleton, Typography } from '@mui/material'\n\n/* Local */\n// Function\nimport temperatureConverter from '../../utils/temperatureConverter'\n\n// Types\nimport Weather from '../../utils/types/Weather'\n\n// Types\nimport TemperatureUnits from '../../utils/types/TemperatureUnits'\nimport Units from '../../utils/types/Units'\n\n/*\n * Code\n*/\n\ntype Props = {\n  loading: boolean,\n  weather: Weather,\n  unitType: Units\n}\n\nexport default function TemperatureCard({ loading, weather, unitType }: Props): JSX.Element {\n  const temperatureUnit: TemperatureUnits = unitType === 'imperial' ? 'F' : 'C'\n\n  return (\n    <>\n      <Typography variant=\"h5\">\n        Temperature\n      </Typography>\n\n      <Typography variant=\"h4\">\n        {loading ? <Skeleton /> :\n          `${temperatureConverter(weather.main.temp, 'K', temperatureUnit)}°${temperatureUnit}`\n        }\n      </Typography>\n\n      <Typography>\n        {loading ? <Skeleton /> :\n          `It feels like ${temperatureConverter(weather.main.feels_like, 'K', temperatureUnit)}°${temperatureUnit}`\n        }\n      </Typography>\n\n      <Typography>\n        {loading ? <Skeleton /> :\n          `${temperatureConverter(weather.main.temp_min, 'K', temperatureUnit)}°${temperatureUnit} Low \n          to ${temperatureConverter(weather.main.temp_max, 'K', temperatureUnit)}°${temperatureUnit} High`\n        }\n      </Typography>\n    </>\n  )\n}\n","/*\n * Imports\n*/\n\n/* Dependencies */\n// Components\nimport { Skeleton, Typography } from '@mui/material'\n\n/* Locals */\n// Types\nimport Weather from '../../utils/types/Weather'\n\n/*\n * Code\n*/\n\ntype Props = {\n  loading: boolean,\n  weather: Weather\n}\n\nexport default function VisibilityCard({ loading, weather }: Props): JSX.Element {\n  return (\n    <>\n      <Typography variant=\"h5\">Visibility</Typography>\n\n      <Typography>{loading ? <Skeleton /> : getVisibility(weather.visibility)}</Typography>\n    </>\n  )\n}\n\nfunction getVisibility(visibility: number): string {\n  if (visibility < 1000) {\n    return `${visibility} m`\n  }\n\n  return `${(visibility / 1000).toFixed(1)} km`\n}\n","/*\n * Imports\n*/\n\n/* Dependencies */\n// Components\nimport { Skeleton, Typography } from '@mui/material'\n\n/* Local */\n// Types\nimport Weather from '../../utils/types/Weather'\n\n/*\n * Code\n*/\n\ntype Props = {\n  loading: boolean,\n  weather: Weather\n}\n\nexport default function WeatherCard({ loading, weather }: Props): JSX.Element {\n  return (\n    <>\n      {loading ? <Skeleton\n        variant=\"rectangular\"\n        width={100}\n        height={100}\n        style={{ margin: '0 auto' }}\n      /> : <img\n        src={`https://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`}\n        alt={weather.weather[0].description}\n        width=\"100\"\n        height=\"100\"\n      />}\n\n      <Typography variant=\"h4\">{loading ? <Skeleton /> : weather.weather[0].main}</Typography>\n      \n      <Typography>{loading ? <Skeleton /> : `${weather.name} has ${weather.weather[0].description}`}</Typography>\n    </>\n  )\n}\n","/*\n * Imports\n*/\n\n/* Dependencies */\n// Components\nimport { Skeleton, Typography } from '@mui/material'\n\n/* Locals */\n// Types\nimport Units from '../../utils/types/Units'\nimport Weather from '../../utils/types/Weather'\n\n/*\n * Code\n*/\n\ntype Props = {\n  loading: boolean,\n  weather: Weather,\n  unitType: Units,\n}\n\nexport default function WindCard({ loading, weather, unitType }: Props): JSX.Element {\n  return (\n    <>\n      <Typography variant=\"h5\">Wind</Typography>\n      \n      <Typography>\n        {loading ? <Skeleton /> : unitType === 'metric' ? `${weather.wind.speed} m/s` : `${(weather.wind.speed * 2.237).toFixed(1)} mph`}\n      </Typography>\n    </>\n  )\n}\n","/*\n * Imports\n*/\n\n/* Dependencies */\n// Functions\nimport { styled } from '@mui/system'\n\n// Components\nimport { Paper } from '@mui/material'\n\n/*\n * Code\n*/\n\nconst ItemPaper = styled(Paper)(({ theme }) => ({\n  padding: '1rem',\n  margin: '0.25rem',\n  textAlign: 'center',\n  backgroundColor: theme.palette.primary.main,\n  opacity: '0.75'\n}))\n\nexport default ItemPaper\n","/*\n * Imports\n */\n\n/* Dependencies */\n// Components\nimport { Button, Typography } from \"@mui/material\"\n\n/* Local */\n// Components\nimport ItemPaper from \"../components/ItemPaper\"\n\n/*\n * Code\n */\n\nexport default function Footer(): JSX.Element {\n  return (\n    <footer>\n      <ItemPaper>\n        <Button\n          variant='contained'\n          color='secondary'\n          onClick={() =>\n            window.open(\n              \"https://github.com/NathenDT/Weather-App\",\n              \"_blank\",\n              \"noreferrer\"\n            )\n          }\n        >\n          See the code\n        </Button>\n      </ItemPaper>\n    </footer>\n  )\n}\n","/*\n * Imports\n*/\n\n/* Dependencies */\n// Components\nimport { Helmet } from 'react-helmet'\n\n/* Local */\n// Types\nimport Weather from '../utils/types/Weather'\n\n/*\n * Code\n*/\n\ntype Props = {\n  loading: boolean,\n  weather: Weather\n}\n\nexport default function Head({ loading, weather }: Props): JSX.Element {\n  return (\n    <Helmet>\n      <link\n        rel=\"icon\"\n        href={loading ? 'http://openweathermap.org/img/wn/01d@2x.png' : `https://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`}\n      />\n\n      <title>{loading ? 'Weather App' : `${weather.name} has ${weather.weather[0].main}`}</title>\n    </Helmet>\n  )\n}\n","/*\n * Imports\n*/\n\n/* Dependencies */\n// Components\nimport { IconButton } from '@mui/material'\nimport { Draggable } from 'react-beautiful-dnd'\n\n// Styles\nimport { Delete } from '@mui/icons-material'\n\n/* Locals */\n// Components\nimport ItemPaper from './ItemPaper'\n\n// Types\nimport CardNames from '../utils/types/CardNames'\n\n/*\n * Code\n*/\n\ntype Props = {\n  children: any,\n  cards: CardNames[],\n  index: number,\n  name: CardNames,\n  setCards: (cards: CardNames[]) => void,\n}\n\nexport default function Card({ children, cards, index, name, setCards }: Props): JSX.Element {\n  const handleDelete = () => setCards(cards.filter((_: CardNames, _index: number) => _index !== index))\n\n  return (\n    <Draggable\n      key={name}\n      draggableId={name}\n      index={index}\n    >\n      {(provided) => (\n        <ItemPaper\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          sx={{\n            position: 'relative',\n          }}\n        >\n          <IconButton\n            sx={{\n              position: 'absolute',\n              top: '0',\n              right: '0',\n            }}\n            onClick={handleDelete}\n          >\n            <Delete />\n          </IconButton>\n\n          {children}\n        </ItemPaper>\n      )}\n    </Draggable>\n  )\n}\n","/*\n * Imports\n*/\n\n/* Dependencies */\n// Functions\nimport Cookies from 'universal-cookie'\n\n// Components\nimport { Grid, Stack } from '@mui/material'\nimport { DragDropContext, Droppable, DropResult } from 'react-beautiful-dnd'\n\n/* Locals */\n// Components\nimport Card from './Card'\n\n// Types\nimport CardList from '../utils/types/CardList'\nimport CardNames from '../utils/types/CardNames'\n\n/*\n * Code\n*/\n\ntype Props = {\n  cardsLeft: CardNames[],\n  cardsList: CardList[],\n  cardsRight: CardNames[],\n  setCardsLeft: (cards: CardNames[]) => void,\n  setCardsRight: (cards: CardNames[]) => void,\n}\n\nexport default function Main({ cardsLeft, cardsList, cardsRight, setCardsLeft, setCardsRight }: Props): JSX.Element {\n  const cookies = new Cookies()\n  \n  const onDragEnd = ({ source, destination }: DropResult) => {\n    if(!destination) return\n\n    if(source.droppableId === destination.droppableId) {\n      if(source.droppableId === 'left') {\n        cardsLeft.splice(destination.index, 0, cardsLeft.splice(source.index, 1)[0])\n\n        cookies.set('cardsLeft', cardsLeft.join('|'), { path: '/' })\n\n        return setCardsLeft(cardsLeft)\n      }\n\n      cardsRight.splice(destination.index, 0, cardsRight.splice(source.index, 1)[0])\n\n      cookies.set('cardsRight', cardsRight.join('|'), { path: '/' })\n\n      return setCardsRight(cardsRight)\n    }\n\n    if(source.droppableId === 'left') {\n      const card = cardsLeft.splice(source.index, 1)[0]\n\n      cardsRight.splice(destination.index, 0, card)\n    } else {\n      const card = cardsRight.splice(source.index, 1)[0]\n\n      cardsLeft.splice(destination.index, 0, card)\n    }\n\n    cookies.set('cardsLeft', cardsLeft.join('|'), { path: '/' })\n    cookies.set('cardsRight', cardsRight.join('|'), { path: '/' })\n\n    setCardsLeft(cardsLeft)\n    setCardsRight(cardsRight)\n  }\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <Grid container>\n        <Column\n          dropId=\"left\"\n          cards={cardsLeft}\n          cardsList={cardsList}\n          setCards={setCardsLeft}\n        />\n\n        <Column\n          dropId=\"right\"\n          cards={cardsRight}\n          cardsList={cardsList}\n          setCards={setCardsRight}\n        />\n      </Grid>\n    </DragDropContext>\n  )\n}\n\ntype ColumnProps = {\n  dropId: 'left' | 'right',\n  cards: CardNames[],\n  cardsList: CardList[],\n  setCards: (cards: CardNames[]) => void,\n}\n\nfunction Column({ dropId, cards, cardsList, setCards }: ColumnProps): JSX.Element {\n  return (\n    <Grid\n      item\n      xs={6}\n    >\n      <Droppable droppableId={dropId}>\n        {(provided) => (\n          <Stack ref={provided.innerRef}>\n            {cards.map((name: CardNames, index: number) => (\n              <Card\n                key={index}\n                name={name}\n                index={index}\n                cards={cards}\n                setCards={setCards}\n              >\n                {cardsList.find(card => card.name === name)?.component}\n              </Card>\n            ))}\n\n            {provided.placeholder}\n          </Stack>\n        )}\n      </Droppable>\n    </Grid>\n  )\n}\n","/*\n * Imports\n*/\n\n/* Dependencies */\n// Components\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, IconButton, List, ListItem, ListItemIcon, ListItemText, Typography } from '@mui/material'\n\n// Styles\nimport { Add as AddIcon } from '@mui/icons-material'\n\n/* Locals */\n// Components\nimport ItemPaper from '../ItemPaper'\n\n// Types\nimport CardNames from '../../utils/types/CardNames'\n\n/*\n * Code\n*/\n\nconst cardNames: CardNames[] = ['cloud', 'date', 'humidity', 'pressure', 'sun', 'temperature', 'visibility', 'weather', 'wind']\n\ntype Props = {\n  cardsLeft: CardNames[],\n  cardsRight: CardNames[],\n  open: boolean,\n  setCards: (cards: CardNames[]) => void,\n  setOpen: (open: boolean) => void,\n}\n\nexport default function Add({ open, cardsLeft, cardsRight, setOpen, setCards }: Props): JSX.Element {\n  const handleAddCard = (name: CardNames) => {\n    setCards([name, ...cardsLeft])\n  }\n  \n  const handleClose = () => {\n    setOpen(false)\n  }\n  \n  return (\n    <Dialog\n      open={open}\n      onClose={handleClose}\n      fullWidth\n      PaperProps={{\n        sx: {\n          bgcolor: 'background.default'\n        }\n      }}\n    >\n      <DialogTitle>Add</DialogTitle>\n\n      <DialogContent>\n        <ItemPaper>\n          <List>\n            {\n              cardNames.filter(cardName => ![...cardsLeft, ...cardsRight].includes(cardName)).length === 0 ?\n              <Typography>No card deleted</Typography> :\n              cardNames\n                .filter(cardName => ![...cardsLeft, ...cardsRight].includes(cardName))\n                .map(cardName => (\n                  <ListItem key={cardName}>\n                    <ListItemIcon>\n                      <IconButton onClick={() => handleAddCard(cardName)}>\n                        <AddIcon />\n                      </IconButton>\n                    </ListItemIcon>\n\n                    <ListItemText primary={cardName[0].toUpperCase() + cardName.slice(1)} />\n                  </ListItem>\n                ))\n            }\n          </List>\n        </ItemPaper>\n      </DialogContent>\n\n      <DialogActions>\n        <Button\n          onClick={handleClose}\n        >\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","/*\n * Imports\n*/\n\n/* Dependencies */\n// Functions\nimport Cookies from 'universal-cookie'\n\n// Components\nimport { Grid, ToggleButton, ToggleButtonGroup, Typography } from '@mui/material'\n\n/* Local */\n// Components\nimport ItemPaper from '../../../ItemPaper'\n\n// Types\nimport ThemeTypes from '../../../../utils/types/ThemeTypes'\n\n/*\n * Code\n*/\n\ntype Props = {\n  themeType: ThemeTypes,\n  setThemeType: (themeType: ThemeTypes) => void,\n}\n\nexport default function Theme({ themeType, setThemeType }: Props): JSX.Element {\n  const cookies = new Cookies()\n  \n  const handleChange = (_: React.ChangeEvent<{}>, value: ThemeTypes) => {\n    if(!value) return\n\n    console.log(value)\n\n    cookies.set('themeType', value, { path: '/' })\n\n    setThemeType(value)\n  }\n  return (\n    <Grid item xs={6}>\n      <ItemPaper>\n        <Typography variant=\"h6\">Theme</Typography>\n\n        <ToggleButtonGroup\n          value={themeType}\n          exclusive\n          onChange={handleChange}\n        >\n          <ToggleButton value=\"light\">Light</ToggleButton>\n          <ToggleButton value=\"dark\">Dark</ToggleButton>\n          <ToggleButton value=\"time\">Time</ToggleButton>\n        </ToggleButtonGroup>\n\n        {themeType === 'time' && <Typography variant=\"body1\">\n          The time theme will change based on sunrise/sunset. \n        </Typography>}\n      </ItemPaper>\n    </Grid>\n  )\n}\n","/*\n * Imports\n*/\n\n/* Dependencies */\n// Components\nimport { Grid, ToggleButton, ToggleButtonGroup, Typography } from '@mui/material'\n\n/* Local */\n// Components\nimport ItemPaper from '../../../ItemPaper'\n\n// Types\nimport Units from '../../../../utils/types/Units'\n\n/*\n * Code\n*/\n\ntype Props = {\n  unitType: Units,\n  setUnitType: (unitType: Units) => void,\n}\n\nexport default function Unit({ unitType, setUnitType }: Props): JSX.Element {\n  const handleChange = (_: React.ChangeEvent<{}>, value: Units | null): void => {\n    if (!value) return\n\n    setUnitType(value)\n  }\n\n  return (\n    <Grid item xs={6}>\n      <ItemPaper>\n        <Typography variant=\"h6\">Unit</Typography>\n\n        <ToggleButtonGroup\n          value={unitType}\n          exclusive\n          onChange={handleChange}\n        >\n          <ToggleButton value=\"imperial\">Imperial</ToggleButton>\n          <ToggleButton value=\"metric\">Metric</ToggleButton>\n        </ToggleButtonGroup>\n      </ItemPaper>\n    </Grid>\n  )\n}","/*\n * Imports\n*/\n\n/* Dependencies */\n// Components\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, Grid } from '@mui/material'\n\n/* Locals */\n// Components\nimport Theme from './cards/Theme'\nimport Unit from './cards/Unit'\n\n// Types\nimport ThemeTypes from '../../../utils/types/ThemeTypes'\nimport Units from '../../../utils/types/Units'\n\n/*\n * Code\n*/\n\ntype Props = {\n  open: boolean,\n  themeType: ThemeTypes,\n  unitType: Units,\n  setOpen: (open: boolean) => void,\n  setThemeType: (themeType: ThemeTypes) => void,\n  setUnitType: (unitType: Units) => void,\n}\n\nexport default function Settings({\n  open,\n  themeType,\n  unitType,\n  setOpen,\n  setThemeType,\n  setUnitType,\n}: Props): JSX.Element {\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  return (\n    <Dialog\n      open={open}\n      onClose={handleClose}\n      fullWidth\n      PaperProps={{\n        sx: {\n          bgcolor: 'background.default'\n        }\n      }}\n    >\n      <DialogTitle>Settings</DialogTitle>\n\n      <DialogContent>\n        <Grid container columns={{ xs: 6, sm: 12 }}>\n          <Unit\n            unitType={unitType}\n            setUnitType={setUnitType}\n          />\n\n          <Theme\n            themeType={themeType}\n            setThemeType={setThemeType}\n          />\n        </Grid>\n      </DialogContent>\n\n      <DialogActions>\n        <Button onClick={handleClose}>\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","/*\n * Imports\n*/\n\n/* Dependencies */\n// Functions\nimport { useState } from 'react'\n\n// Components\nimport { SpeedDial, SpeedDialAction } from '@mui/material'\n\n// Styles\nimport { Add as AddIcon, MoreVert, Settings as SettingsIcon } from '@mui/icons-material'\n\n/* Locals */\n// Components\nimport Add from './Add'\nimport Settings from './settings/Index'\n\n// Types\nimport CardNames from '../../utils/types/CardNames'\nimport ThemeTypes from '../../utils/types/ThemeTypes'\nimport Units from '../../utils/types/Units'\n\n/*\n * Code\n*/\n\ntype Props = {\n  cardLeft: CardNames[],\n  cardRight: CardNames[],\n  themeType: ThemeTypes,\n  unitType: Units,\n  setCards: (cards: CardNames[]) => void,\n  setThemeType: (themeType: ThemeTypes) => void,\n  setUnitType: (unitType: Units) => void,\n}\n\nexport default function More({\n  cardLeft,\n  cardRight,\n  themeType,\n  unitType,\n  setCards,\n  setThemeType,\n  setUnitType\n}: Props): JSX.Element {\n  const\n    [addOpen, setAddOpen] = useState<boolean>(false),\n    [settingsOpen, setSettingsOpen] = useState<boolean>(false)\n\n  const actions = [\n    { icon: <AddIcon />, name: 'Add', handleOpen: () => setAddOpen(true) },\n    { icon: <SettingsIcon />, name: 'Settings', handleOpen: () => setSettingsOpen(true) }\n  ]\n\n  return (\n    <>\n      <SpeedDial\n        ariaLabel=\"More\"\n        style={{\n          position: 'fixed',\n          bottom: '20px', \n          right: '20px',\n        }}\n        icon={<MoreVert />}\n      >\n        {actions.map(({ icon, name, handleOpen }) => (\n          <SpeedDialAction\n            key={name}\n            icon={icon}\n            tooltipTitle={name}\n            onClick={handleOpen}\n          />\n        ))}\n      </SpeedDial>\n\n      <Add\n        open={addOpen}\n        cardsLeft={cardLeft}\n        cardsRight={cardRight}\n        setOpen={setAddOpen}\n        setCards={setCards}\n      />\n\n      <Settings\n        open={settingsOpen}\n        themeType={themeType}\n        unitType={unitType}\n        setOpen={setSettingsOpen}\n        setThemeType={setThemeType}\n        setUnitType={setUnitType}\n      />\n    </>\n  )\n}\n","/*\n * Imports\n*/\n\n/* Dependencies */\n// Components\nimport { Skeleton, Typography } from '@mui/material'\n\n/* Local */\n// Components\nimport ItemPaper from './ItemPaper'\n\n// Types\nimport Weather from '../utils/types/Weather'\n\n/*\n * Code\n*/\n\ntype Props = {\n  loading: boolean,\n  weather: Weather\n}\n\nexport default function Title({ loading, weather }: Props): JSX.Element {\n  return (\n    <ItemPaper>\n      <Typography variant=\"h3\" component=\"h1\">\n        {loading ? <Skeleton /> : `${weather.name}, ${weather.sys.country}`}\n      </Typography>\n    </ItemPaper>\n  )\n}\n","/*\n * Imports\n*/\n\n/* Dependencies */\n// Functions\nimport { useState } from 'react'\n\n// Components\nimport { Alert, AlertTitle, Button, Dialog, DialogActions, DialogContent, Grid, IconButton, Typography } from '@mui/material'\n\n// Styles\nimport { Help } from '@mui/icons-material'\n\n/*\n * Code\n*/\n\nexport default function ToggleCookies(): JSX.Element {\n  const\n    [aboutOpen, setAboutOpen] = useState<boolean>(false),\n    [display, setDisplay] = useState<boolean>(true)\n\n  return (\n    display ? <>\n      <Alert\n        severity=\"info\"\n        action={<Actions\n          setAboutOpen={setAboutOpen}\n          setDisplay={setDisplay}\n        />}\n        style={{ margin: '0.25em' }}\n      >\n        <AlertTitle>\n          Cookies are delicious!!!\n        </AlertTitle>\n      </Alert>\n\n      <About\n        open={aboutOpen}\n        setDisplay={setDisplay}\n        setOpen={setAboutOpen}\n      />\n    </> : <></>\n  )\n}\n\ntype ActionsProps = {\n  setAboutOpen: (aboutOpen: boolean) => void,\n  setDisplay: (display: boolean) => void\n}\n\nfunction Actions({ setAboutOpen, setDisplay }: ActionsProps): JSX.Element {\n  return (\n    <Grid container spacing={1}>\n      <Grid item>\n        <IconButton onClick={() => setAboutOpen(true)}>\n          <Help />\n        </IconButton>\n      </Grid>\n\n      <Grid item>\n        <Button\n          variant=\"contained\"\n          onClick={() => setDisplay(false)}\n        >\n          Agree\n        </Button>\n      </Grid>\n    </Grid>\n  )\n}\n\ntype AboutProps = {\n  open: boolean,\n  setDisplay: (display: boolean) => void,\n  setOpen: (open: boolean) => void,\n}\n\nfunction About({ open, setDisplay, setOpen }: AboutProps): JSX.Element {\n  const cookiesMessage: string = 'This website uses cookies to enhance the user experience. Cookies save data on your computer that is used to personalise content. '\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  return (\n    <Dialog\n      fullWidth\n      open={open}\n      onClose={handleClose}\n      PaperProps={{\n        sx: {\n          bgcolor: 'background.default'\n        }\n      }}\n    >\n      <DialogContent>\n        <Typography>\n          {cookiesMessage}\n        </Typography>\n      </DialogContent>\n\n      <DialogActions>\n        <Button\n          variant=\"contained\"\n          onClick={() => setDisplay(false)}\n        >\n          Agree\n        </Button>\n\n        <Button onClick={handleClose}>\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","/*\n * Imports\n*/\n\n/* Dependencies */\n// Functions\nimport { useEffect, useState } from 'react'\nimport Cookies from 'universal-cookie'\n\n// Components\nimport { Alert } from '@mui/material'\nimport { ThemeProvider } from '@mui/material/styles'\n\n// Styles\nimport { CssBaseline } from '@mui/material'\nimport { createTheme, Theme } from '@mui/material/styles'\n\n/* Local */\n// Functions\nimport getCardList from './utils/getCardList'\n\n// Components\nimport Footer from './components/Footer'\nimport Head from './components/Head'\nimport Main from './components/Main'\nimport More from './components/more/Index'\nimport Title from './components/Title'\nimport ToggleCookies from './components/ToggleCookies'\n\n// Styles\nimport './styles/App.scss'\n\n// Jsons\nimport constants from './constants.json'\n\n// Types\nimport CardList from './utils/types/CardList'\nimport CardNames from './utils/types/CardNames'\nimport ThemeTypes from './utils/types/ThemeTypes'\nimport Units from './utils/types/Units'\nimport Weather from './utils/types/Weather'\n\n/*\n * Code\n*/\n\nconst APIKEY = constants.api_key\n\nconst darkTheme: Theme = createTheme({\n  palette: {\n    background: {\n      default: '#3B3C40',\n    },\n    text: {\n      primary: '#EFEFED'\n    }\n  }\n})\n\nconst lightTheme: Theme = createTheme({\n  palette: {\n    background: {\n      default: '#EFEFED',\n    },\n    text: {\n      primary: '#000000'\n    }\n  }\n})\n\nexport default function App(): JSX.Element {\n  const\n    [cardsLeft, setCardsLeft] = useState<CardNames[]>(['weather', 'sun', 'cloud', 'humidity']),\n    [cardsRight, setCardsRight] = useState<CardNames[]>(['temperature', 'date', 'wind', 'visibility', 'pressure']),\n    [currentDate, setCurrentDate] = useState<Date>(new Date()),\n    [error, setError] = useState<string>(''),\n    [loading, setLoading] = useState<boolean>(true),\n    [themeType, setThemeType] = useState<ThemeTypes>('time'),\n    [unitType, setUnitType] = useState<Units>('metric'),\n    [weather, setWeather] = useState<Weather>({\n      coord: { lon: 0, lat: 0 },\n      weather: [{ id: 0, main: '', description: '', icon: '' }],\n      base: '',\n      main: { temp: 0, feels_like: 0, temp_min: 0, temp_max: 0, pressure: 0, humidity: 0 },\n      visibility: 0,\n      wind: { speed: 0, deg: 0 },\n      clouds: { all: 0 },\n      dt: 0,\n      sys: { type: 0, id: 0, country: '', sunrise: 0, sunset: 0 },\n      timezone: 0,\n      id: 0,\n      name: '',\n      cod: 0\n    })\n\n  const cardsList: CardList[] = getCardList(loading, weather, currentDate, unitType)\n\n  useEffect(() => { // On load\n    if(!navigator.geolocation) return setError(`Can't get your location weather`) // When the browser doesn't support geolocation\n    \n    getCookies(setCardsLeft, setCardsRight, setThemeType)\n\n    getPositionWeather().then((_weather: Weather | null) => { // Get the weather from the current position\n      if(!_weather) return setError(`Can't get your location weather`)\n\n      setWeather(_weather)\n\n      setLoading(false)\n\n      const countryCode: string = _weather.sys.country.toUpperCase()\n\n      if(countryCode === 'US' || countryCode === 'MM' || countryCode === 'LR') setUnitType('imperial')\n    })\n\n    const weatherInterval = setInterval(() => { // Update the weather hourly\n      getPositionWeather().then((_weather: Weather | null) => {\n        if(!_weather) return setError(`Can't get your location weather`)\n\n        setWeather(_weather)\n      })\n    }, 1000 * 60 * 60) // One Hour\n\n    const dateInterval = setInterval(() => { // Update the date\n      setCurrentDate(new Date())\n    }, 100) // One Hundred Milliseconds\n\n    return () => { // On unload\n      clearInterval(weatherInterval)\n      clearInterval(dateInterval)\n    }\n  }, [])\n\n  return (\n    <>\n      <Head\n        loading={loading}\n        weather={weather}\n      />\n\n      <ThemeProvider theme={\n        themeType === 'time' ?\n        (timeTheme(weather, currentDate) === 'Night' ? darkTheme : lightTheme) :\n        (themeType === 'dark' ? darkTheme : lightTheme)\n      }>\n        <CssBaseline />\n\n        <ToggleCookies />\n\n        {Boolean(error) && <Alert\n          severity=\"error\"\n          style={{ margin: '0.25em' }}\n        >\n          {error}\n        </Alert>}\n\n        <Title\n          loading={loading}\n          weather={weather}\n        />\n\n        <Main\n          cardsLeft={cardsLeft}\n          cardsList={cardsList}\n          cardsRight={cardsRight}\n          setCardsLeft={setCardsLeft}\n          setCardsRight={setCardsRight}\n        />\n\n        <Footer />\n\n        <More\n          cardLeft={cardsLeft}\n          cardRight={cardsRight}\n          themeType={themeType}\n          unitType={unitType}\n          setCards={setCardsLeft}\n          setThemeType={setThemeType}\n          setUnitType={setUnitType}\n        />\n      </ThemeProvider>\n    </>\n  )\n}\n\nasync function getPositionWeather(): Promise<Weather | null> { // Get the weather from the current position\n  const [latitude, longitude] = await getPosition()\n\n  const APIURL: string = `https://api.openweathermap.org/data/2.5/weather?lat=${latitude.toString()}&lon=${longitude.toString()}&appid=${APIKEY}`\n\n  const response: Response = await fetch(APIURL)\n\n  if(!response.ok) return null\n\n  return response.json()\n}\n\nfunction getCookies( // Gets cookies and updates the states\n  setCardsLeft: (cardsLeft: CardNames[]) => void,\n  setCardsRight: (cardsRight: CardNames[]) => void,\n  setThemeType: (themeType: ThemeTypes) => void\n) {\n  const cookies = new Cookies()\n  \n  const cardNames: string[] = ['cloud', 'date', 'humidity', 'pressure', 'sun', 'temperature', 'visibility', 'weather', 'wind']\n  const themeTypes: string[] = ['dark', 'light', 'time']\n\n  const cardsLeft = cookies.get('cardsLeft')\n  const cardsRight = cookies.get('cardsRight')\n  const themeType = cookies.get('themeType')\n\n  if(cardsLeft) setCardsLeft(cardsLeft.split('|').filter((name: string) => {\n    return cardNames.includes(name)\n  }))\n\n  if(cardsRight) setCardsRight(cardsRight.split('|').filter((name: string) => {\n    return cardNames.includes(name)\n  }))\n\n  if(themeTypes.includes(themeType)) setThemeType(themeType)\n}\n\nfunction getPosition(): Promise<[number, number]> { // Get the current position\n  return new Promise((resolve) => {\n    navigator.geolocation.getCurrentPosition((position: GeolocationPosition) => {\n      const { latitude, longitude } = position.coords\n\n      resolve([latitude, longitude])\n    })\n  })\n}\n\nfunction timeTheme(weather: Weather, currentDate: Date): 'Day' | 'Night' { // Get the current time theme\n  const sunrise = new Date(weather.sys.sunrise * 1000)\n  const sunset = new Date(weather.sys.sunset * 1000)\n\n  if (currentDate.getTime() > sunrise.getTime() && currentDate.getTime() < sunset.getTime()) return 'Day'\n  \n  return 'Night'\n}\n","/*\n * Imports\n*/\n\n/* Local */\n// Components\nimport CloudCard from '../components/cards/Cloud'\nimport DateCard from '../components/cards/Date'\nimport HumidityCard from '../components/cards/Humidity'\nimport PressureCard from '../components/cards/Pressure'\nimport SunCard from '../components/cards/Sun'\nimport TemperatureCard from '../components/cards/Temperature'\nimport VisibilityCard from '../components/cards/Visibility'\nimport WeatherCard from '../components/cards/Weather'\nimport WindCard from '../components/cards/Wind'\n\n// Types\nimport CardList from './types/CardList'\nimport Units from './types/Units'\nimport Weather from './types/Weather'\n\n/*\n * Code\n*/\n\nexport default function getCardList(\n  loading: boolean,\n  weather: Weather,\n  currentDate: Date,\n  unitType: Units,\n): CardList[] {\n  return [\n    {\n      name: 'cloud',\n      component: CloudCard({ loading, weather }),\n    },\n    {\n      name: 'date',\n      component: DateCard({ currentDate }), \n    },\n    {\n      name: 'humidity',\n      component: HumidityCard({ loading, weather }),\n    },\n    {\n      name: 'pressure',\n      component: PressureCard({ loading, unitType, weather }),\n    },\n    {\n      name: 'sun',\n      component: SunCard({ loading, weather }),\n    },\n    {\n      name: 'temperature',\n      component: TemperatureCard({ loading, unitType, weather }),\n    },\n    {\n      name: 'visibility',\n      component: VisibilityCard({ loading, weather }),\n    },\n    {\n      name: 'weather',\n      component: WeatherCard({ loading, weather }),\n    },\n    {\n      name: 'wind',\n      component: WindCard({ loading, unitType, weather }),\n    },\n  ]\n}\n","/*\n * Imports\n*/\n\n/* Dependencies */\n// Functions\nimport ReactDOM from 'react-dom'\n\n/* Local */\n// Components\nimport App from './App'\n\n/*\n * Code\n*/\n\nReactDOM.render( // Renders the App component\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}